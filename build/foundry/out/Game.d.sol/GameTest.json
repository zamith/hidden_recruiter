{
  "abi": [
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGameCreation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611d86806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a9254e41461003b578063af9b094414610045575b600080fd5b61004361004d565b005b6100436100f0565b604051610059906102fc565b604051809103906000f080158015610075573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691821790556040516100a190610309565b6001600160a01b039091168152602001604051809103906000f0801580156100cd573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001808252818301909252600091602080830190803683370190505090507371c7656ec7ab88b098defb751b7401b5f6d8976f8160008151811061013a5761013a610316565b6001600160a01b039283166020918202929092010152600154604051630d3b778560e31b81527f1ae347f9e0b8129ea0868504e38efe1e2723b56a4ecf361fd0663ea7046cc30a9291909116906369dbbc28906101a090607b908690869060040161032c565b600060405180830381600087803b1580156101ba57600080fd5b505af11580156101ce573d6000803e3d6000fd5b50505050816000815181106101e5576101e5610316565b6020908102919091010151600154604051631bfb8bf960e21b8152607b6004820152600060248201526001600160a01b039283169290911690636fee2fe490604401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610268919061038c565b6001600160a01b03161461027e5761027e6103bc565b6001546040516322fe0ea360e01b8152607b600482015282916001600160a01b0316906322fe0ea390602401602060405180830381865afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb91906103d2565b146102f8576102f86103bc565b5050565b6111af806103ec83390190565b6107b68061159b83390190565b634e487b7160e01b600052603260045260246000fd5b6000606082018583526020606081850152818651808452608086019150828801935060005b818110156103765784516001600160a01b031683529383019391830191600101610351565b5050809350505050826040830152949350505050565b60006020828403121561039e57600080fd5b81516001600160a01b03811681146103b557600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156103e457600080fd5b505191905056fe608060405234801561001057600080fd5b5061118f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004361003e366004611004565b610057565b604051901515815260200160405180910390f35b6000610061610e2d565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608084019190915290825283518085018552898401805151825251840151818501528284015284830191909152825180840184528751815287830151818401528484015282516002808252918101845260009390928301908036833701905050905060005b600281101561014657848160028110610112576101126110a4565b6020020151828281518110610129576101296110a4565b60209081029190910101528061013e816110d0565b9150506100f7565b506101518183610172565b6000036101635760019250505061016a565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018161019e610369565b9050806080015151855160016101b491906110e9565b146101fb5760405162461bcd60e51b81526020600482015260126024820152711d995c9a599a595c8b5898590b5a5b9c1d5d60721b60448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b86518110156102ec578387828151811061022e5761022e6110a4565b6020026020010151106102835760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640060448201526064016101f2565b6102d8826102d3856080015184600161029c91906110e9565b815181106102ac576102ac6110a4565b60200260200101518a85815181106102c6576102c66110a4565b602002602001015161077c565b610812565b9150806102e4816110d0565b915050610212565b50610315818360800151600081518110610308576103086110a4565b6020026020010151610812565b905061034b61032786600001516108ab565b8660200151846000015185602001518587604001518b60400151896060015161094a565b61035b5760019350505050610363565b600093505050505b92915050565b610371610e7e565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835180820185527f20602da04123292a3201993f49beb711e6f7312e10ed8632ce12da8175eb70278186019081527f2416935c6a994bc52375f4ffd714acbcc5b7ca8d50505586ff86d15190e3ee6f828501528152845180860186527f24acfca6aab36d13649700d2e9d420c00b767ad711ce0de3ed8a645df943e42481527f06190fce45e8b645b3a0231ca2a8df302ecf8b6b5bd2119f77b10bc0cdba931c818601528185015291850191909152825160038082529181019093529082015b60408051808201909152600080825260208201528152602001906001900390816105ed57505060808201908152604080518082019091527f12ba1b2d2eea9b85c82a1781ea143db063b2f3f8ef55e23c197ce625823df24681527f0c8aea686153bfc9c01fc93eeef847e19be91acd6644044fa38184ba90a690a5602082015290518051600090610680576106806110a4565b602002602001018190525060405180604001604052807f15fd988632a2d3395bf2c712cd64b0b70fae723e3106aedfad2f78b4d09c774a81526020017f2d241f41a422d2bc2ada2d8bf8d5e3c34dbbd75c3fdc63d1d7b452e4bc7111b981525081608001516001815181106106f7576106f76110a4565b602002602001018190525060405180604001604052807f0709aeddd7a2e4f61860d9070a687b86499bffac44fc6d9746b985330bd841be81526020017f14c0d8e02fc1dd011cffff2d8e20f1ea9087fc07f048d12588c9689c6f6fbe09815250816080015160028151811061076e5761076e6110a4565b602002602001018190525090565b6040805180820190915260008082526020820152610798610ecf565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080806107c757fe5b508061080a5760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b60448201526064016101f2565b505092915050565b604080518082019091526000808252602082015261082e610eed565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa9050808061086857fe5b508061080a5760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b60448201526064016101f2565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47901580156108f257506020830151155b156109125750506040805180820190915260008082526020820152919050565b6040518060400160405280846000015181526020018285602001516109379190611101565b6109419084611123565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161096557505060408051600480825260a0820190925291925060009190602082015b6109af610f0b565b8152602001906001900390816109a75790505090508a826000815181106109d8576109d86110a4565b602002602001018190525088826001815181106109f7576109f76110a4565b60200260200101819052508682600281518110610a1657610a166110a4565b60200260200101819052508482600381518110610a3557610a356110a4565b60200260200101819052508981600081518110610a5457610a546110a4565b60200260200101819052508781600181518110610a7357610a736110a4565b60200260200101819052508581600281518110610a9257610a926110a4565b60200260200101819052508381600381518110610ab157610ab16110a4565b6020026020010181905250610ac68282610ad5565b9b9a5050505050505050505050565b60008151835114610b215760405162461bcd60e51b81526020600482015260166024820152751c185a5c9a5b99cb5b195b99dd1a1ccb59985a5b195960521b60448201526064016101f2565b82516000610b3082600661113a565b905060008167ffffffffffffffff811115610b4d57610b4d610f67565b604051908082528060200260200182016040528015610b76578160200160208202803683370190505b50905060005b83811015610db157868181518110610b9657610b966110a4565b60200260200101516000015182826006610bb0919061113a565b610bbb9060006110e9565b81518110610bcb57610bcb6110a4565b602002602001018181525050868181518110610be957610be96110a4565b60200260200101516020015182826006610c03919061113a565b610c0e9060016110e9565b81518110610c1e57610c1e6110a4565b602002602001018181525050858181518110610c3c57610c3c6110a4565b6020908102919091010151515182610c5583600661113a565b610c609060026110e9565b81518110610c7057610c706110a4565b602002602001018181525050858181518110610c8e57610c8e6110a4565b60209081029190910181015151015182610ca983600661113a565b610cb49060036110e9565b81518110610cc457610cc46110a4565b602002602001018181525050858181518110610ce257610ce26110a4565b602002602001015160200151600060028110610d0057610d006110a4565b602002015182610d1183600661113a565b610d1c9060046110e9565b81518110610d2c57610d2c6110a4565b602002602001018181525050858181518110610d4a57610d4a6110a4565b602002602001015160200151600160028110610d6857610d686110a4565b602002015182610d7983600661113a565b610d849060056110e9565b81518110610d9457610d946110a4565b602090810291909101015280610da9816110d0565b915050610b7c565b50610dba610f2b565b6000602082602086026020860160086107d05a03fa90508080610dd957fe5b5080610e1f5760405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b60448201526064016101f2565b505115159695505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610e57610f0b565b8152602001610e79604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610ea8610f0b565b8152602001610eb5610f0b565b8152602001610ec2610f0b565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610f1e610f49565b8152602001610e79610f49565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610fae57634e487b7160e01b600052604160045260246000fd5b60405290565b600082601f830112610fc557600080fd5b610fcd610f7d565b806040840185811115610fdf57600080fd5b845b81811015610ff9578035845260209384019301610fe1565b509095945050505050565b600080600080610140858703121561101b57600080fd5b6110258686610fb4565b9350604086605f87011261103857600080fd5b611040610f7d565b8060c088018981111561105257600080fd5b8389015b81811015611077576110688b82610fb4565b84526020909301928401611056565b508196506110858a82610fb4565b955050505050611099866101008701610fb4565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110e2576110e26110ba565b5060010190565b600082198211156110fc576110fc6110ba565b500190565b60008261111e57634e487b7160e01b600052601260045260246000fd5b500690565b600082821015611135576111356110ba565b500390565b6000816000190483118215151615611154576111546110ba565b50029056fea2646970667358221220122f1829eedba70bbddea48561ad09e36696419dd55cffde88f696810148e5d164736f6c634300080e0033608060405234801561001057600080fd5b506040516107b63803806107b683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610723806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806322fe0ea3146100675780632b7ac3f31461009a57806369dbbc28146100c55780636fee2fe4146100da5780638306b550146100ed578063d0399bb814610100575b600080fd5b6100876100753660046103a9565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546100ad906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6100d86100d33660046103c2565b610113565b005b6100ad6100e8366004610447565b6101fa565b6100d86100fb36600461051c565b610232565b6100d861010e3660046103a9565b6102f0565b6000848152600160205260409020541561016b5760405162461bcd60e51b815260206004820152601460248201527311d85b5948185b1c9958591e481cdd185c9d195960621b60448201526064015b60405180910390fd5b600084815260016020526040902081905581801580159061018d575060048111155b6101d95760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f66206167656e747300000000000000006044820152606401610162565b60008581526002602052604090206101f2908585610317565b505050505050565b6002602052816000526040600020818154811061021657600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054604051636490cd3d60e11b81526001600160a01b039091169063c9219a7a9061026890879087908790879060040161061d565b602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906106c4565b6102ea5760405162461bcd60e51b81526020600482015260126024820152713b32b934b334b1b0ba34b7b71032b93937b960711b6044820152606401610162565b50505050565b6000818152600160209081526040808320839055600290915281206103149161037a565b50565b82805482825590600052602060002090810192821561036a579160200282015b8281111561036a5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610337565b50610376929150610394565b5090565b508054600082559060005260206000209081019061031491905b5b808211156103765760008155600101610395565b6000602082840312156103bb57600080fd5b5035919050565b600080600080606085870312156103d857600080fd5b84359350602085013567ffffffffffffffff808211156103f757600080fd5b818701915087601f83011261040b57600080fd5b81358181111561041a57600080fd5b8860208260051b850101111561042f57600080fd5b95986020929092019750949560400135945092505050565b6000806040838503121561045a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156104a2576104a2610469565b60405290565b604051610100810167ffffffffffffffff811182821017156104a2576104a2610469565b600082601f8301126104dd57600080fd5b6104e561047f565b8060408401858111156104f757600080fd5b845b818110156105115780358452602093840193016104f9565b509095945050505050565b60008060008061020080868803121561053457600080fd5b61053e87876104cc565b9450604087605f88011261055157600080fd5b61055961047f565b8060c089018a81111561056b57600080fd5b838a015b81811015610590576105818c826104cc565b8452602090930192840161056f565b5081975061059e8b826104cc565b9650505050508661011f8701126105b457600080fd5b6105bc6104a8565b9086019080888311156105ce57600080fd5b61010088015b838110156105ec5780358352602092830192016105d4565b509598949750929550505050565b8060005b60028110156102ea5781518452602093840193909101906001016105fe565b610200810161062c82876105fa565b60408083018660005b6002808210610644575061067f565b82518460005b8381101561066857825182526020928301929091019060010161064a565b505050928401925060209190910190600101610635565b5050505061069060c08301856105fa565b61010082018360005b60088110156106b8578151835260209283019290910190600101610699565b50505095945050505050565b6000602082840312156106d657600080fd5b815180151581146106e657600080fd5b939250505056fea2646970667358221220dc2eb0e15f947e0fb2084d293824b056ce02ee0ab13543ffb8a7b3424531cc5b64736f6c634300080e0033a264697066735822122069e0bd05e0cb4cc53e45a327215b2095e97bce71297c11ccfcd7c1cc867639f864736f6c634300080e0033",
    "sourceMap": "142:614:2:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630a9254e41461003b578063af9b094414610045575b600080fd5b61004361004d565b005b6100436100f0565b604051610059906102fc565b604051809103906000f080158015610075573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691821790556040516100a190610309565b6001600160a01b039091168152602001604051809103906000f0801580156100cd573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001808252818301909252600091602080830190803683370190505090507371c7656ec7ab88b098defb751b7401b5f6d8976f8160008151811061013a5761013a610316565b6001600160a01b039283166020918202929092010152600154604051630d3b778560e31b81527f1ae347f9e0b8129ea0868504e38efe1e2723b56a4ecf361fd0663ea7046cc30a9291909116906369dbbc28906101a090607b908690869060040161032c565b600060405180830381600087803b1580156101ba57600080fd5b505af11580156101ce573d6000803e3d6000fd5b50505050816000815181106101e5576101e5610316565b6020908102919091010151600154604051631bfb8bf960e21b8152607b6004820152600060248201526001600160a01b039283169290911690636fee2fe490604401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610268919061038c565b6001600160a01b03161461027e5761027e6103bc565b6001546040516322fe0ea360e01b8152607b600482015282916001600160a01b0316906322fe0ea390602401602060405180830381865afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb91906103d2565b146102f8576102f86103bc565b5050565b6111af806103ec83390190565b6107b68061159b83390190565b634e487b7160e01b600052603260045260246000fd5b6000606082018583526020606081850152818651808452608086019150828801935060005b818110156103765784516001600160a01b031683529383019391830191600101610351565b5050809350505050826040830152949350505050565b60006020828403121561039e57600080fd5b81516001600160a01b03811681146103b557600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156103e457600080fd5b505191905056fe608060405234801561001057600080fd5b5061118f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004361003e366004611004565b610057565b604051901515815260200160405180910390f35b6000610061610e2d565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608084019190915290825283518085018552898401805151825251840151818501528284015284830191909152825180840184528751815287830151818401528484015282516002808252918101845260009390928301908036833701905050905060005b600281101561014657848160028110610112576101126110a4565b6020020151828281518110610129576101296110a4565b60209081029190910101528061013e816110d0565b9150506100f7565b506101518183610172565b6000036101635760019250505061016a565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018161019e610369565b9050806080015151855160016101b491906110e9565b146101fb5760405162461bcd60e51b81526020600482015260126024820152711d995c9a599a595c8b5898590b5a5b9c1d5d60721b60448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b86518110156102ec578387828151811061022e5761022e6110a4565b6020026020010151106102835760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640060448201526064016101f2565b6102d8826102d3856080015184600161029c91906110e9565b815181106102ac576102ac6110a4565b60200260200101518a85815181106102c6576102c66110a4565b602002602001015161077c565b610812565b9150806102e4816110d0565b915050610212565b50610315818360800151600081518110610308576103086110a4565b6020026020010151610812565b905061034b61032786600001516108ab565b8660200151846000015185602001518587604001518b60400151896060015161094a565b61035b5760019350505050610363565b600093505050505b92915050565b610371610e7e565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835180820185527f20602da04123292a3201993f49beb711e6f7312e10ed8632ce12da8175eb70278186019081527f2416935c6a994bc52375f4ffd714acbcc5b7ca8d50505586ff86d15190e3ee6f828501528152845180860186527f24acfca6aab36d13649700d2e9d420c00b767ad711ce0de3ed8a645df943e42481527f06190fce45e8b645b3a0231ca2a8df302ecf8b6b5bd2119f77b10bc0cdba931c818601528185015291850191909152825160038082529181019093529082015b60408051808201909152600080825260208201528152602001906001900390816105ed57505060808201908152604080518082019091527f12ba1b2d2eea9b85c82a1781ea143db063b2f3f8ef55e23c197ce625823df24681527f0c8aea686153bfc9c01fc93eeef847e19be91acd6644044fa38184ba90a690a5602082015290518051600090610680576106806110a4565b602002602001018190525060405180604001604052807f15fd988632a2d3395bf2c712cd64b0b70fae723e3106aedfad2f78b4d09c774a81526020017f2d241f41a422d2bc2ada2d8bf8d5e3c34dbbd75c3fdc63d1d7b452e4bc7111b981525081608001516001815181106106f7576106f76110a4565b602002602001018190525060405180604001604052807f0709aeddd7a2e4f61860d9070a687b86499bffac44fc6d9746b985330bd841be81526020017f14c0d8e02fc1dd011cffff2d8e20f1ea9087fc07f048d12588c9689c6f6fbe09815250816080015160028151811061076e5761076e6110a4565b602002602001018190525090565b6040805180820190915260008082526020820152610798610ecf565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080806107c757fe5b508061080a5760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b60448201526064016101f2565b505092915050565b604080518082019091526000808252602082015261082e610eed565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa9050808061086857fe5b508061080a5760405162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b60448201526064016101f2565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47901580156108f257506020830151155b156109125750506040805180820190915260008082526020820152919050565b6040518060400160405280846000015181526020018285602001516109379190611101565b6109419084611123565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161096557505060408051600480825260a0820190925291925060009190602082015b6109af610f0b565b8152602001906001900390816109a75790505090508a826000815181106109d8576109d86110a4565b602002602001018190525088826001815181106109f7576109f76110a4565b60200260200101819052508682600281518110610a1657610a166110a4565b60200260200101819052508482600381518110610a3557610a356110a4565b60200260200101819052508981600081518110610a5457610a546110a4565b60200260200101819052508781600181518110610a7357610a736110a4565b60200260200101819052508581600281518110610a9257610a926110a4565b60200260200101819052508381600381518110610ab157610ab16110a4565b6020026020010181905250610ac68282610ad5565b9b9a5050505050505050505050565b60008151835114610b215760405162461bcd60e51b81526020600482015260166024820152751c185a5c9a5b99cb5b195b99dd1a1ccb59985a5b195960521b60448201526064016101f2565b82516000610b3082600661113a565b905060008167ffffffffffffffff811115610b4d57610b4d610f67565b604051908082528060200260200182016040528015610b76578160200160208202803683370190505b50905060005b83811015610db157868181518110610b9657610b966110a4565b60200260200101516000015182826006610bb0919061113a565b610bbb9060006110e9565b81518110610bcb57610bcb6110a4565b602002602001018181525050868181518110610be957610be96110a4565b60200260200101516020015182826006610c03919061113a565b610c0e9060016110e9565b81518110610c1e57610c1e6110a4565b602002602001018181525050858181518110610c3c57610c3c6110a4565b6020908102919091010151515182610c5583600661113a565b610c609060026110e9565b81518110610c7057610c706110a4565b602002602001018181525050858181518110610c8e57610c8e6110a4565b60209081029190910181015151015182610ca983600661113a565b610cb49060036110e9565b81518110610cc457610cc46110a4565b602002602001018181525050858181518110610ce257610ce26110a4565b602002602001015160200151600060028110610d0057610d006110a4565b602002015182610d1183600661113a565b610d1c9060046110e9565b81518110610d2c57610d2c6110a4565b602002602001018181525050858181518110610d4a57610d4a6110a4565b602002602001015160200151600160028110610d6857610d686110a4565b602002015182610d7983600661113a565b610d849060056110e9565b81518110610d9457610d946110a4565b602090810291909101015280610da9816110d0565b915050610b7c565b50610dba610f2b565b6000602082602086026020860160086107d05a03fa90508080610dd957fe5b5080610e1f5760405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b60448201526064016101f2565b505115159695505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610e57610f0b565b8152602001610e79604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610ea8610f0b565b8152602001610eb5610f0b565b8152602001610ec2610f0b565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610f1e610f49565b8152602001610e79610f49565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610fae57634e487b7160e01b600052604160045260246000fd5b60405290565b600082601f830112610fc557600080fd5b610fcd610f7d565b806040840185811115610fdf57600080fd5b845b81811015610ff9578035845260209384019301610fe1565b509095945050505050565b600080600080610140858703121561101b57600080fd5b6110258686610fb4565b9350604086605f87011261103857600080fd5b611040610f7d565b8060c088018981111561105257600080fd5b8389015b81811015611077576110688b82610fb4565b84526020909301928401611056565b508196506110858a82610fb4565b955050505050611099866101008701610fb4565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110e2576110e26110ba565b5060010190565b600082198211156110fc576110fc6110ba565b500190565b60008261111e57634e487b7160e01b600052601260045260246000fd5b500690565b600082821015611135576111356110ba565b500390565b6000816000190483118215151615611154576111546110ba565b50029056fea2646970667358221220122f1829eedba70bbddea48561ad09e36696419dd55cffde88f696810148e5d164736f6c634300080e0033608060405234801561001057600080fd5b506040516107b63803806107b683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610723806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806322fe0ea3146100675780632b7ac3f31461009a57806369dbbc28146100c55780636fee2fe4146100da5780638306b550146100ed578063d0399bb814610100575b600080fd5b6100876100753660046103a9565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546100ad906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6100d86100d33660046103c2565b610113565b005b6100ad6100e8366004610447565b6101fa565b6100d86100fb36600461051c565b610232565b6100d861010e3660046103a9565b6102f0565b6000848152600160205260409020541561016b5760405162461bcd60e51b815260206004820152601460248201527311d85b5948185b1c9958591e481cdd185c9d195960621b60448201526064015b60405180910390fd5b600084815260016020526040902081905581801580159061018d575060048111155b6101d95760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f66206167656e747300000000000000006044820152606401610162565b60008581526002602052604090206101f2908585610317565b505050505050565b6002602052816000526040600020818154811061021657600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054604051636490cd3d60e11b81526001600160a01b039091169063c9219a7a9061026890879087908790879060040161061d565b602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906106c4565b6102ea5760405162461bcd60e51b81526020600482015260126024820152713b32b934b334b1b0ba34b7b71032b93937b960711b6044820152606401610162565b50505050565b6000818152600160209081526040808320839055600290915281206103149161037a565b50565b82805482825590600052602060002090810192821561036a579160200282015b8281111561036a5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610337565b50610376929150610394565b5090565b508054600082559060005260206000209081019061031491905b5b808211156103765760008155600101610395565b6000602082840312156103bb57600080fd5b5035919050565b600080600080606085870312156103d857600080fd5b84359350602085013567ffffffffffffffff808211156103f757600080fd5b818701915087601f83011261040b57600080fd5b81358181111561041a57600080fd5b8860208260051b850101111561042f57600080fd5b95986020929092019750949560400135945092505050565b6000806040838503121561045a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156104a2576104a2610469565b60405290565b604051610100810167ffffffffffffffff811182821017156104a2576104a2610469565b600082601f8301126104dd57600080fd5b6104e561047f565b8060408401858111156104f757600080fd5b845b818110156105115780358452602093840193016104f9565b509095945050505050565b60008060008061020080868803121561053457600080fd5b61053e87876104cc565b9450604087605f88011261055157600080fd5b61055961047f565b8060c089018a81111561056b57600080fd5b838a015b81811015610590576105818c826104cc565b8452602090930192840161056f565b5081975061059e8b826104cc565b9650505050508661011f8701126105b457600080fd5b6105bc6104a8565b9086019080888311156105ce57600080fd5b61010088015b838110156105ec5780358352602092830192016105d4565b509598949750929550505050565b8060005b60028110156102ea5781518452602093840193909101906001016105fe565b610200810161062c82876105fa565b60408083018660005b6002808210610644575061067f565b82518460005b8381101561066857825182526020928301929091019060010161064a565b505050928401925060209190910190600101610635565b5050505061069060c08301856105fa565b61010082018360005b60088110156106b8578151835260209283019290910190600101610699565b50505095945050505050565b6000602082840312156106d657600080fd5b815180151581146106e657600080fd5b939250505056fea2646970667358221220dc2eb0e15f947e0fb2084d293824b056ce02ee0ab13543ffb8a7b3424531cc5b64736f6c634300080e0033a264697066735822122069e0bd05e0cb4cc53e45a327215b2095e97bce71297c11ccfcd7c1cc867639f864736f6c634300080e0033",
    "sourceMap": "142:614:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:118;;;:::i;:::-;;337:417;;;:::i;213:118::-;258:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;247:8:2;:33;;-1:-1:-1;;;;;;247:33:2;-1:-1:-1;;;;;247:33:2;;;;;;;;;297:27;;;;;:::i;:::-;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;297:27:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:4:2;:34;;-1:-1:-1;;;;;;290:34:2;-1:-1:-1;;;;;290:34:2;;;;;;;;;;213:118::o;337:417::-;408:16;;;422:1;408:16;;;;;;;;;382:23;;408:16;;;;;;;;;;;-1:-1:-1;408:16:2;382:42;;446;434:6;441:1;434:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;434:54:2;;;:9;;;;;;;;;:54;606:4;;:38;;-1:-1:-1;;;606:38:2;;519:77;;606:4;;;;;:14;;:38;;621:3;;626:6;;519:77;;606:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:6;692:1;685:9;;;;;;;;:::i;:::-;;;;;;;;;;;662:4;;:19;;-1:-1:-1;;;662:19:2;;674:3;662:19;;;1494:25:3;662:4:2;1535:18:3;;;1528:34;-1:-1:-1;;;;;662:32:2;;;;:4;;;;:11;;1467:18:3;;662:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;662:32:2;;655:40;;;;:::i;:::-;712:4;;:21;;-1:-1:-1;;;712:21:2;;729:3;712:21;;;2156:25:3;737:9:2;;-1:-1:-1;;;;;712:4:2;;:16;;2129:18:3;;712:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;705:42;;;;:::i;:::-;372:382;;337:417::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;354:127:3:-;415:10;410:3;406:20;403:1;396:31;446:4;443:1;436:15;470:4;467:1;460:15;486:811;694:4;742:2;731:9;727:18;772:6;761:9;754:25;798:2;836;831;820:9;816:18;809:30;859:6;894;888:13;925:6;917;910:22;963:3;952:9;948:19;941:26;;1002:2;994:6;990:15;976:29;;1023:1;1033:195;1047:6;1044:1;1041:13;1033:195;;;1112:13;;-1:-1:-1;;;;;1108:39:3;1096:52;;1203:15;;;;1168:12;;;;1144:1;1062:9;1033:195;;;1037:3;;1245;1237:11;;;;;1284:6;1279:2;1268:9;1264:18;1257:34;486:811;;;;;;:::o;1573:290::-;1643:6;1696:2;1684:9;1675:7;1671:23;1667:32;1664:52;;;1712:1;1709;1702:12;1664:52;1738:16;;-1:-1:-1;;;;;1783:31:3;;1773:42;;1763:70;;1829:1;1826;1819:12;1763:70;1852:5;1573:290;-1:-1:-1;;;1573:290:3:o;1868:127::-;1929:10;1924:3;1920:20;1917:1;1910:31;1960:4;1957:1;1950:15;1984:4;1981:1;1974:15;2192:184;2262:6;2315:2;2303:9;2294:7;2290:23;2286:32;2283:52;;;2331:1;2328;2321:12;2283:52;-1:-1:-1;2354:16:3;;2192:184;-1:-1:-1;2192:184:3:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "setUp()": "0a9254e4",
    "testGameCreation()": "af9b0944"
  },
  "ast": {
    "absolutePath": "test/foundry/Game.d.sol",
    "id": 1267,
    "exportedSymbols": {
      "AgentAskVerifier": [
        1024
      ],
      "Game": [
        1176
      ],
      "GameTest": [
        1266
      ],
      "IVerifier": [
        1051
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:757:2",
    "nodes": [
      {
        "id": 1178,
        "nodeType": "PragmaDirective",
        "src": "0:23:2",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1181,
        "nodeType": "ImportDirective",
        "src": "25:45:2",
        "absolutePath": "src/contracts/Game.sol",
        "file": "src/Game.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1267,
        "sourceUnit": 1177,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1179,
              "name": "Game",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1176,
              "src": "33:4:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1180,
              "name": "IVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1051,
              "src": "39:9:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1183,
        "nodeType": "ImportDirective",
        "src": "71:69:2",
        "absolutePath": "build/AgentAsk/AgentAskVerifier.sol",
        "file": "build/AgentAsk/AgentAskVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1267,
        "sourceUnit": 1025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1182,
              "name": "AgentAskVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1024,
              "src": "79:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1266,
        "nodeType": "ContractDefinition",
        "src": "142:614:2",
        "nodes": [
          {
            "id": 1186,
            "nodeType": "VariableDeclaration",
            "src": "166:25:2",
            "constant": false,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "183:8:2",
            "scope": 1266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
              "typeString": "contract AgentAskVerifier"
            },
            "typeName": {
              "id": 1185,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1184,
                "name": "AgentAskVerifier",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1024,
                "src": "166:16:2"
              },
              "referencedDeclaration": 1024,
              "src": "166:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                "typeString": "contract AgentAskVerifier"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1189,
            "nodeType": "VariableDeclaration",
            "src": "197:9:2",
            "constant": false,
            "mutability": "mutable",
            "name": "game",
            "nameLocation": "202:4:2",
            "scope": 1266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Game_$1176",
              "typeString": "contract Game"
            },
            "typeName": {
              "id": 1188,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1187,
                "name": "Game",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1176,
                "src": "197:4:2"
              },
              "referencedDeclaration": 1176,
              "src": "197:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1176",
                "typeString": "contract Game"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1211,
            "nodeType": "FunctionDefinition",
            "src": "213:118:2",
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "237:94:2",
              "statements": [
                {
                  "expression": {
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1192,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "247:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                        "typeString": "contract AgentAskVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "258:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AgentAskVerifier_$1024_$",
                          "typeString": "function () returns (contract AgentAskVerifier)"
                        },
                        "typeName": {
                          "id": 1194,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1193,
                            "name": "AgentAskVerifier",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1024,
                            "src": "262:16:2"
                          },
                          "referencedDeclaration": 1024,
                          "src": "262:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                            "typeString": "contract AgentAskVerifier"
                          }
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "258:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                        "typeString": "contract AgentAskVerifier"
                      }
                    },
                    "src": "247:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                      "typeString": "contract AgentAskVerifier"
                    }
                  },
                  "id": 1198,
                  "nodeType": "ExpressionStatement",
                  "src": "247:33:2"
                },
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1199,
                      "name": "game",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "290:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1176",
                        "typeString": "contract Game"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1205,
                              "name": "verifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "314:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                                "typeString": "contract AgentAskVerifier"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AgentAskVerifier_$1024",
                                "typeString": "contract AgentAskVerifier"
                              }
                            ],
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "306:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1203,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "306:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "306:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "297:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Game_$1176_$",
                          "typeString": "function (address) returns (contract Game)"
                        },
                        "typeName": {
                          "id": 1201,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1200,
                            "name": "Game",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1176,
                            "src": "301:4:2"
                          },
                          "referencedDeclaration": 1176,
                          "src": "301:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1176",
                            "typeString": "contract Game"
                          }
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "297:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1176",
                        "typeString": "contract Game"
                      }
                    },
                    "src": "290:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1176",
                      "typeString": "contract Game"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "290:34:2"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "222:5:2",
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:2:2"
            },
            "returnParameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:2"
            },
            "scope": 1266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1265,
            "nodeType": "FunctionDefinition",
            "src": "337:417:2",
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "372:382:2",
              "statements": [
                {
                  "assignments": [
                    1218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1218,
                      "mutability": "mutable",
                      "name": "agents",
                      "nameLocation": "399:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "382:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "382:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1217,
                        "nodeType": "ArrayTypeName",
                        "src": "382:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1224,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "408:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "412:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1220,
                        "nodeType": "ArrayTypeName",
                        "src": "412:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "408:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "382:42:2"
                },
                {
                  "expression": {
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1225,
                        "name": "agents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "434:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1227,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "441:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "434:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307837314337363536454337616238386230393864656642373531423734303142356636643839373646",
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "446:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F"
                    },
                    "src": "434:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "434:54:2"
                },
                {
                  "assignments": [
                    1232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1232,
                      "mutability": "mutable",
                      "name": "movesHash",
                      "nameLocation": "507:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "499:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "499:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1234,
                  "initialValue": {
                    "hexValue": "3132313631373035313037353532363338303535303536353832353931363834303835313432313136353535353131363936303134313034363139393032323637373836373031363139393738",
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "519:77:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12161705107552638055056582591684085142116555511696014104619902267786701619978_by_1",
                      "typeString": "int_const 1216...(69 digits omitted)...9978"
                    },
                    "value": "12161705107552638055056582591684085142116555511696014104619902267786701619978"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "499:97:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313233",
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "621:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      },
                      {
                        "id": 1239,
                        "name": "agents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "626:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 1240,
                        "name": "movesHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1232,
                        "src": "634:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1235,
                        "name": "game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "606:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1176",
                          "typeString": "contract Game"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startGame",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "606:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address[] memory,uint256) external"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "606:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "313233",
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "674:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_123_by_1",
                                "typeString": "int_const 123"
                              },
                              "value": "123"
                            },
                            {
                              "hexValue": "30",
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "679:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_123_by_1",
                                "typeString": "int_const 123"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 1244,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "662:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1176",
                                "typeString": "contract Game"
                              }
                            },
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "agents",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1063,
                            "src": "662:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256,uint256) view external returns (address)"
                            }
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "662:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1249,
                            "name": "agents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "685:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1251,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "692:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "685:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "662:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1243,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "655:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "655:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "313233",
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "729:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_123_by_1",
                                "typeString": "int_const 123"
                              },
                              "value": "123"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_123_by_1",
                                "typeString": "int_const 123"
                              }
                            ],
                            "expression": {
                              "id": 1256,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "712:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1176",
                                "typeString": "contract Game"
                              }
                            },
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "movesHashes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1058,
                            "src": "712:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "712:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1260,
                          "name": "movesHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1232,
                          "src": "737:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "712:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1255,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "705:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "705:42:2"
                }
              ]
            },
            "functionSelector": "af9b0944",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGameCreation",
            "nameLocation": "346:16:2",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:2:2"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:0:2"
            },
            "scope": 1266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GameTest",
        "contractDependencies": [
          1024,
          1176
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1266
        ],
        "name": "GameTest",
        "nameLocation": "151:8:2",
        "scope": 1267,
        "usedErrors": []
      }
    ]
  },
  "id": 2
}